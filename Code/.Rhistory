jags_bw = r$jags_bw
ds_allcod_black = get_allcod(ds_jags_bw, r, race='Black')
ds_allcod_white = get_allcod(ds_jags_bw, r, race='White')
ds_allcod_black
ds_allcod_white
year_current = year - 1968
year = 1969
year_current = year - 1968
k = length(unique(ds_allcod$age_bin))
year_current = year - 1968
k = length(unique(ds_allcod_black$age_bin))
k
ds_allcod_black$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_black
year_current = year - 1968
k = length(unique(ds_allcod_black$age_bin))
ds_allcod_black$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_black = ds_allcod_black[ds_allcod_black$year==year_current, ]
ds_allcod_black
lt = life.table(data=ds_allcod_black, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths_b', population.counts='pop')
lt = life.table(data=ds_allcod_black, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
results_cod
results_cod = list()
N_COD = length(ds_jags_bw)
for(i in 1:N_COD) {
if(race == 'Black') {
smoothed_deaths = jagsresults(x=jags_bw[[i]], params=c('mu_b'))[, '50%']
r = data.frame(year=ds_jags_bw[[i]]$year_b)
r$deaths = ds_jags_bw[[i]]$deaths_b
r$smoothed_deaths = smoothed_deaths
r$age_bins = ds_jags_bw[[i]]$age.bin_b
r$pop = exp(ds_jags_bw[[i]]$lnpop_b)
results_cod[[i]] = r[order(r$age_bins, r$year), ]
}
if(race == 'White') {
smoothed_deaths = jagsresults(x=jags_bw[[i]], params=c('mu_w'))[, '50%']
r = data.frame(year=ds_jags_bw[[i]]$year_w)
r$deaths = ds_jags_bw[[i]]$deaths_w
r$smoothed_deaths = smoothed_deaths
r$age_bins = ds_jags_bw[[i]]$age.bin_w
r$pop = exp(ds_jags_bw[[i]]$lnpop_w)
results_cod[[i]] = r[order(r$age_bins, r$year), ]
}
}
race = 'Black'
results_cod = list()
N_COD = length(ds_jags_bw)
for(i in 1:N_COD) {
if(race == 'Black') {
smoothed_deaths = jagsresults(x=jags_bw[[i]], params=c('mu_b'))[, '50%']
r = data.frame(year=ds_jags_bw[[i]]$year_b)
r$deaths = ds_jags_bw[[i]]$deaths_b
r$smoothed_deaths = smoothed_deaths
r$age_bins = ds_jags_bw[[i]]$age.bin_b
r$pop = exp(ds_jags_bw[[i]]$lnpop_b)
results_cod[[i]] = r[order(r$age_bins, r$year), ]
}
if(race == 'White') {
smoothed_deaths = jagsresults(x=jags_bw[[i]], params=c('mu_w'))[, '50%']
r = data.frame(year=ds_jags_bw[[i]]$year_w)
r$deaths = ds_jags_bw[[i]]$deaths_w
r$smoothed_deaths = smoothed_deaths
r$age_bins = ds_jags_bw[[i]]$age.bin_w
r$pop = exp(ds_jags_bw[[i]]$lnpop_w)
results_cod[[i]] = r[order(r$age_bins, r$year), ]
}
}
temp = smoothed_allcod_deaths = c()
nrows = length(results_cod[[1]]$smoothed_deaths)
for(j in 1:nrows) {
for(i in 1:N_COD) {
temp[i] = results_cod[[i]]$smoothed_deaths[j]
}
smoothed_allcod_deaths[j] = sum(temp)
}
ds_allcod = data.frame(year=results_cod[[1]]$year,
age_bin=results_cod[[1]]$age_bins,
pop=results_cod
smoothed_allcod_deaths)
# Subset dataset
subset_data = function(race, sex,  cod) {
selected_vars = c('Age', 'Sex2', 'Race2', 'COD2', 'Year', 'Count', 'Population')
ds = dat.clean.alabama[(dat.clean.alabama$Race2==race &
dat.clean.alabama$Sex2==sex &
dat.clean.alabama$COD2==cod), selected_vars]
df = data.frame(deaths=ds$Count, pop = ds$Population, age=(ds$Age+1), year=(ds$Year+1))
df$censored = ifelse(is.na(df$deaths),1,0)
ds2 = df[order(df$censored), ]
ds_jags = list(deaths = ds2$deaths,
lnpop = log(ds2$pop),
age.bin = ds2$age,
year = ds2$year,
binned = is.na(ds2$deaths),
not.binned = !is.na(ds2$deaths),
n.binned = sum(is.na(ds2$deaths)),
n.not.binned = sum(!is.na(ds2$deaths)),
n.not.binned.plus.1 = sum(!is.na(ds2$deaths)) + 1,
n.rows = sum(is.na(ds2$deaths)) + sum(!is.na(ds2$deaths)),
n.age.bins = length(unique(ds2$age)),
n.years = length(unique(ds2$year)),
binned.id = ds2$censored)
return(ds_jags)
}
combine_race_data = function(dsb, dsw) {
n = length(dsb)
names(dsb) = paste0(names(dsb),'_b')
names(dsw) = paste0(names(dsw),'_w')
return(c(dsb, dsw))
}
merge_data = function(sex='Male') {
COD_list = c('Injuries', 'Cardiovascular', 'Cancers', 'Communicable',
'Non-communicable', 'All other causes')
ds_black = ds_white = ds_jags_bw = list()
N_COD = length(COD_list)
for(i in 1:N_COD) {
current_cod = COD_list[i]
ds_black = subset_data(race='Black', sex=sex, cod=current_cod)
ds_white = subset_data(race='White', sex=sex, cod=current_cod)
ds_jags_bw[[i]] = combine_race_data(ds_black, ds_white)
}
return(ds_jags_bw)
}
#
# JAGS model with binned likelihood and smoothing by year
bwmort_smooth_time = function(ds_jags_bw) {
model = function() {
#BLACK
for(i in 1:n.not.binned_b) {
deaths_b[i] ~ dpois(mu_b[i])
log(mu_b[i]) <- lnrate_b[age.bin_b[i], year_b[i]] + lnpop_b[i]
}
for(i in n.not.binned.plus.1_b:n.rows_b) {
binned.id_b[i] ~ dinterval(deaths_b[i], c(0, 9))
deaths_b[i] ~ dpois(mu_b[i])
log(mu_b[i]) <- lnrate_b[age.bin_b[i], year_b[i]] + lnpop_b[i]
}
for (j in 1:n.age.bins_b) {
lnrate_b[j,1]~dnorm(-4, 0.1)
for (k in 2:n.years_b) {
lnrate_b[j,k] ~ dnorm(lnrate_b[j,k-1],tau_b)
}
}
tau_b~dgamma(0.01, 0.01)
#WHITE
for(i in 1:n.not.binned_w) {
deaths_w[i] ~ dpois(mu_w[i])
log(mu_w[i]) <- lnrate_w[age.bin_w[i], year_w[i]] + lnpop_w[i]
}
for(i in n.not.binned.plus.1_w:n.rows_w) {
binned.id_w[i] ~ dinterval(deaths_w[i], c(0, 9))
deaths_w[i] ~ dpois(mu_w[i])
log(mu_w[i]) <- lnrate_w[age.bin_w[i], year_w[i]] + lnpop_w[i]
}
for (j in 1:n.age.bins_w) {
lnrate_w[j,1]~dnorm(-4, 0.1)
for (k in 2:n.years_w) {
lnrate_w[j,k] ~ dnorm(lnrate_w[j,k-1],tau_w)
}
}
tau_w~dgamma(0.01, 0.01)
}
# MODEL INITILIZATION FOR MCMC
params = c('mu_w', 'mu_b')
nchains = 2
ideaths_b = c(rep(NA, ds_jags_bw$n.not.binned_b), rep(5, ds_jags_bw$n.binned_b))
ideaths_w = c(rep(NA, ds_jags_bw$n.not.binned_w), rep(5, ds_jags_bw$n.binned_w))
ilnrate_b=matrix(-4,ds_jags_bw$n.age.bins_b,ds_jags_bw$n.years_b)
ilnrate_w=matrix(-4,ds_jags_bw$n.age.bins_w,ds_jags_bw$n.years_w)
inits = list(deaths_b=ideaths_b, deaths_w = ideaths_w, tau_b=0.001, tau_w=0.001, lnrate_b=ilnrate_b,
lnrate_w = ilnrate_w)
myinits = list(inits, inits)
# RUN MCMC
jags_model = jags(data=ds_jags_bw, param=params, n.chains=nchains, inits = myinits, n.iter=10000, n.burnin=2000, model.file=model)
return(jags_model)
}
# Run the smoothing models
run_smoothing_models = function(state='Alabama', sex='Male')  {
ds_jags_bw = merge_data(sex=sex)
# Run model for each COD
jags_bw = list()
for(i in 1:N_COD) {
jags_bw[[i]] = bwmort_smooth_time(ds_jags_bw[[i]])
}
return(list(jags_bw=jags_bw, sex=sex, state=state))
}
get_allcod = function(ds_jags_bw, r, race) {
results_cod = list()
N_COD = length(ds_jags_bw)
for(i in 1:N_COD) {
if(race == 'Black') {
smoothed_deaths = jagsresults(x=jags_bw[[i]], params=c('mu_b'))[, '50%']
r = data.frame(year=ds_jags_bw[[i]]$year_b)
r$deaths = ds_jags_bw[[i]]$deaths_b
r$smoothed_deaths = smoothed_deaths
r$age_bins = ds_jags_bw[[i]]$age.bin_b
r$pop = exp(ds_jags_bw[[i]]$lnpop_b)
results_cod[[i]] = r[order(r$age_bins, r$year), ]
}
if(race == 'White') {
smoothed_deaths = jagsresults(x=jags_bw[[i]], params=c('mu_w'))[, '50%']
r = data.frame(year=ds_jags_bw[[i]]$year_w)
r$deaths = ds_jags_bw[[i]]$deaths_w
r$smoothed_deaths = smoothed_deaths
r$age_bins = ds_jags_bw[[i]]$age.bin_w
r$pop = exp(ds_jags_bw[[i]]$lnpop_w)
results_cod[[i]] = r[order(r$age_bins, r$year), ]
}
}
temp = smoothed_allcod_deaths = c()
nrows = length(results_cod[[1]]$smoothed_deaths)
for(j in 1:nrows) {
for(i in 1:N_COD) {
temp[i] = results_cod[[i]]$smoothed_deaths[j]
}
smoothed_allcod_deaths[j] = sum(temp)
}
ds_allcod = data.frame(year=results_cod[[1]]$year,
age_bin=results_cod[[1]]$age_bins,
pop = results_cod[[1]]$pop,
smoothed_allcod_deaths)
return(ds_allcod)
}
ds_jags_bw = merge_data(sex=r$sex)
jags_bw = r$jags_bw
ds_allcod_black = get_allcod(ds_jags_bw, r, race='Black')
function (x, params, regex = FALSE, invert = FALSE, probs = c(0.025,
sex=r$sex
sex
# Preamble
setwd("~/Documents/BlackWhiteMortalityGap/Code")
source('4_smoothing_time_src.R')
source('4_smoothing_time_fun.R')
source('life_expectancy_functions.R')
load('results_men_alabama.RData')
r = list(jags_bw=r_m, sex='Male', state='Alabama')
ds_jags_bw = merge_data(sex=r$sex)
ds_jags_bw
jags_bw = r$jags_bw
ds_allcod_black = get_allcod(ds_jags_bw, r, race='Black')
ds_allcod_white = get_allcod(ds_jags_bw, r, race='White')
ds_allcod_black
year_current = year - 1968
year = 1969
year_current = year - 1968
k = length(unique(ds_allcod_black$age_bin))
ds_allcod_black$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_black = ds_allcod_black[ds_allcod_black$year==year_current, ]
lt = life.table(data=ds_allcod_black, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
lt
year_current = year - 1968
k = length(unique(ds_allcod_black$age_bin))
ds_allcod_black$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_black = ds_allcod_black[ds_allcod_black$year==year_current, ]
ds_allcod_white$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_white = ds_allcod_black[ds_allcod_white$year==year_current, ]
lt_black = life.table(data=ds_allcod_black, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
lt_white = life.table(data=ds_allcod_white, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
lt_white
lt_black
ds_allcod_white
ds_allcod_white = get_allcod(ds_jags_bw, r, race='White')
ds_allcod_white
year_current = year - 1968
k = length(unique(ds_allcod_black$age_bin))
ds_allcod_black$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_black = ds_allcod_black[ds_allcod_black$year==year_current, ]
ds_allcod_white$year
ds_allcod_white$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_white = ds_allcod_white[ds_allcod_white$year==year_current, ]
ds_allcod_white
lt_black = life.table(data=ds_allcod_black, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
lt_white = life.table(data=ds_allcod_white, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
lt_white
get_life_tables = function(r, year) {  #r = object from run_smoothing_models
ds_jags_bw = merge_data(sex=r$sex)
jags_bw = r$jags_bw
ds_allcod_black = get_allcod(ds_jags_bw, r, race='Black')
ds_allcod_white = get_allcod(ds_jags_bw, r, race='White')
year_current = year - 1968
k = length(unique(ds_allcod_black$age_bin))
ds_allcod_black$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_black = ds_allcod_black[ds_allcod_black$year==year_current, ]
ds_allcod_white$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_white = ds_allcod_white[ds_allcod_white$year==year_current, ]
lt_black = life.table(data=ds_allcod_black, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
lt_white = life.table(data=ds_allcod_white, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
return(list(lt_black=lt_black, lt_white=lt_white))
}
lt_men_69 = get_life_tables(r_m, year='1969')
r = r_m
setwd("~/Documents/BlackWhiteMortalityGap/Code")
source('4_smoothing_time_src.R')
source('4_smoothing_time_fun.R')
source('life_expectancy_functions.R')
load('results_men_alabama.RData')
r = list(jags_bw=r_m, sex='Male', state='Alabama')
r_m = r
lt_men_69 = get_life_tables(r_m, year='1969')
lt_men_69 = get_life_tables(r, year='1969')
# Subset dataset
subset_data = function(race, sex,  cod) {
selected_vars = c('Age', 'Sex2', 'Race2', 'COD2', 'Year', 'Count', 'Population')
ds = dat.clean.alabama[(dat.clean.alabama$Race2==race &
dat.clean.alabama$Sex2==sex &
dat.clean.alabama$COD2==cod), selected_vars]
df = data.frame(deaths=ds$Count, pop = ds$Population, age=(ds$Age+1), year=(ds$Year+1))
df$censored = ifelse(is.na(df$deaths),1,0)
ds2 = df[order(df$censored), ]
ds_jags = list(deaths = ds2$deaths,
lnpop = log(ds2$pop),
age.bin = ds2$age,
year = ds2$year,
binned = is.na(ds2$deaths),
not.binned = !is.na(ds2$deaths),
n.binned = sum(is.na(ds2$deaths)),
n.not.binned = sum(!is.na(ds2$deaths)),
n.not.binned.plus.1 = sum(!is.na(ds2$deaths)) + 1,
n.rows = sum(is.na(ds2$deaths)) + sum(!is.na(ds2$deaths)),
n.age.bins = length(unique(ds2$age)),
n.years = length(unique(ds2$year)),
binned.id = ds2$censored)
return(ds_jags)
}
combine_race_data = function(dsb, dsw) {
n = length(dsb)
names(dsb) = paste0(names(dsb),'_b')
names(dsw) = paste0(names(dsw),'_w')
return(c(dsb, dsw))
}
merge_data = function(sex='Male') {
COD_list = c('Injuries', 'Cardiovascular', 'Cancers', 'Communicable',
'Non-communicable', 'All other causes')
ds_black = ds_white = ds_jags_bw = list()
N_COD = length(COD_list)
for(i in 1:N_COD) {
current_cod = COD_list[i]
ds_black = subset_data(race='Black', sex=sex, cod=current_cod)
ds_white = subset_data(race='White', sex=sex, cod=current_cod)
ds_jags_bw[[i]] = combine_race_data(ds_black, ds_white)
}
return(ds_jags_bw)
}
#
# JAGS model with binned likelihood and smoothing by year
bwmort_smooth_time = function(ds_jags_bw) {
model = function() {
#BLACK
for(i in 1:n.not.binned_b) {
deaths_b[i] ~ dpois(mu_b[i])
log(mu_b[i]) <- lnrate_b[age.bin_b[i], year_b[i]] + lnpop_b[i]
}
for(i in n.not.binned.plus.1_b:n.rows_b) {
binned.id_b[i] ~ dinterval(deaths_b[i], c(0, 9))
deaths_b[i] ~ dpois(mu_b[i])
log(mu_b[i]) <- lnrate_b[age.bin_b[i], year_b[i]] + lnpop_b[i]
}
for (j in 1:n.age.bins_b) {
lnrate_b[j,1]~dnorm(-4, 0.1)
for (k in 2:n.years_b) {
lnrate_b[j,k] ~ dnorm(lnrate_b[j,k-1],tau_b)
}
}
tau_b~dgamma(0.01, 0.01)
#WHITE
for(i in 1:n.not.binned_w) {
deaths_w[i] ~ dpois(mu_w[i])
log(mu_w[i]) <- lnrate_w[age.bin_w[i], year_w[i]] + lnpop_w[i]
}
for(i in n.not.binned.plus.1_w:n.rows_w) {
binned.id_w[i] ~ dinterval(deaths_w[i], c(0, 9))
deaths_w[i] ~ dpois(mu_w[i])
log(mu_w[i]) <- lnrate_w[age.bin_w[i], year_w[i]] + lnpop_w[i]
}
for (j in 1:n.age.bins_w) {
lnrate_w[j,1]~dnorm(-4, 0.1)
for (k in 2:n.years_w) {
lnrate_w[j,k] ~ dnorm(lnrate_w[j,k-1],tau_w)
}
}
tau_w~dgamma(0.01, 0.01)
}
# MODEL INITILIZATION FOR MCMC
params = c('mu_w', 'mu_b')
nchains = 2
ideaths_b = c(rep(NA, ds_jags_bw$n.not.binned_b), rep(5, ds_jags_bw$n.binned_b))
ideaths_w = c(rep(NA, ds_jags_bw$n.not.binned_w), rep(5, ds_jags_bw$n.binned_w))
ilnrate_b=matrix(-4,ds_jags_bw$n.age.bins_b,ds_jags_bw$n.years_b)
ilnrate_w=matrix(-4,ds_jags_bw$n.age.bins_w,ds_jags_bw$n.years_w)
inits = list(deaths_b=ideaths_b, deaths_w = ideaths_w, tau_b=0.001, tau_w=0.001, lnrate_b=ilnrate_b,
lnrate_w = ilnrate_w)
myinits = list(inits, inits)
# RUN MCMC
jags_model = jags(data=ds_jags_bw, param=params, n.chains=nchains, inits = myinits, n.iter=10000, n.burnin=2000, model.file=model)
return(jags_model)
}
# Run the smoothing models
run_smoothing_models = function(state='Alabama', sex='Male')  {
ds_jags_bw = merge_data(sex=sex)
# Run model for each COD
jags_bw = list()
for(i in 1:N_COD) {
jags_bw[[i]] = bwmort_smooth_time(ds_jags_bw[[i]])
}
return(list(jags_bw=jags_bw, sex=sex, state=state))
}
get_allcod = function(ds_jags_bw, r, race) {
results_cod = list()
N_COD = length(ds_jags_bw)
for(i in 1:N_COD) {
if(race == 'Black') {
smoothed_deaths = jagsresults(x=jags_bw[[i]], params=c('mu_b'))[, '50%']
r = data.frame(year=ds_jags_bw[[i]]$year_b)
r$deaths = ds_jags_bw[[i]]$deaths_b
r$smoothed_deaths = smoothed_deaths
r$age_bins = ds_jags_bw[[i]]$age.bin_b
r$pop = exp(ds_jags_bw[[i]]$lnpop_b)
results_cod[[i]] = r[order(r$age_bins, r$year), ]
}
if(race == 'White') {
smoothed_deaths = jagsresults(x=jags_bw[[i]], params=c('mu_w'))[, '50%']
r = data.frame(year=ds_jags_bw[[i]]$year_w)
r$deaths = ds_jags_bw[[i]]$deaths_w
r$smoothed_deaths = smoothed_deaths
r$age_bins = ds_jags_bw[[i]]$age.bin_w
r$pop = exp(ds_jags_bw[[i]]$lnpop_w)
results_cod[[i]] = r[order(r$age_bins, r$year), ]
}
}
temp = smoothed_allcod_deaths = c()
nrows = length(results_cod[[1]]$smoothed_deaths)
for(j in 1:nrows) {
for(i in 1:N_COD) {
temp[i] = results_cod[[i]]$smoothed_deaths[j]
}
smoothed_allcod_deaths[j] = sum(temp)
}
ds_allcod = data.frame(year=results_cod[[1]]$year,
age_bin=results_cod[[1]]$age_bins,
pop = results_cod[[1]]$pop,
smoothed_allcod_deaths)
return(ds_allcod)
}
# obtain the life tables for both races
get_life_tables = function(r, year) {  #r = object from run_smoothing_models
ds_jags_bw = merge_data(sex=r$sex)
jags_bw = r$jags_bw
ds_allcod_black = get_allcod(ds_jags_bw, r, race='Black')
ds_allcod_white = get_allcod(ds_jags_bw, r, race='White')
year_current = year - 1968
k = length(unique(ds_allcod_black$age_bin))
ds_allcod_black$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_black = ds_allcod_black[ds_allcod_black$year==year_current, ]
ds_allcod_white$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_white = ds_allcod_white[ds_allcod_white$year==year_current, ]
lt_black = life.table(data=ds_allcod_black, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
lt_white = life.table(data=ds_allcod_white, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
return(list(lt_black=lt_black, lt_white=lt_white))
}
lt_men_69 = get_life_tables(r_m, year='1969')
year
year = 1969
ds_jags_bw = merge_data(sex=r$sex)
jags_bw = r$jags_bw
ds_allcod_black = get_allcod(ds_jags_bw, r, race='Black')
ds_allcod_white = get_allcod(ds_jags_bw, r, race='White')
year_current = year - 1968
k = length(unique(ds_allcod_black$age_bin))
ds_allcod_black$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_black = ds_allcod_black[ds_allcod_black$year==year_current, ]
ds_allcod_white$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_white = ds_allcod_white[ds_allcod_white$year==year_current, ]
lt_black = life.table(data=ds_allcod_black, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
lt_white = life.table(data=ds_allcod_white, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
get_life_tables = function(r, year) {  #r = object from run_smoothing_models
ds_jags_bw = merge_data(sex=r$sex)
jags_bw = r$jags_bw
ds_allcod_black = get_allcod(ds_jags_bw, r, race='Black')
ds_allcod_white = get_allcod(ds_jags_bw, r, race='White')
year_current = year - 1968
k = length(unique(ds_allcod_black$age_bin))
ds_allcod_black$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_black = ds_allcod_black[ds_allcod_black$year==year_current, ]
ds_allcod_white$num_ages = c(1, 4, rep(5, k-2))
ds_allcod_white = ds_allcod_white[ds_allcod_white$year==year_current, ]
lt_black = life.table(data=ds_allcod_black, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
lt_white = life.table(data=ds_allcod_white, num.ages.in.group='num_ages',
death.counts='smoothed_allcod_deaths', population.counts='pop')
return(list(lt_black=lt_black, lt_white=lt_white))
}
get_life_tables(r, 1969)
lt_men_69 = get_life_tables(r_m, year=1969)
lt_males_69 = get_life_tables(r_m, year=1969)
lt_males_69
lt_males_79 = get_life_tables(r_m, year=1979)
lt_males_79
lt_males_79 = get_life_tables(r_m, year=2000)
lt_males_79
get_life_tables(r_m, year=2012)
