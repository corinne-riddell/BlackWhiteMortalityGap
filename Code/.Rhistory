for(i in 1:n.not.binned_b) {
deaths_b[i] ~ dpois(mu_b[i])
log(mu_b[i]) <- lnrate_b[age.bin_b[i], year_b[i]] + lnpop_b[i]
}
for(i in n.not.binned.plus.1_b:n.rows_b) {
binned.id_b[i] ~ dinterval(deaths_b[i], c(0, 9))
deaths_b[i] ~ dpois(mu_b[i])
log(mu_b[i]) <- lnrate_b[age.bin_b[i], year_b[i]] + lnpop_b[i]
}
for (j in 1:n.age.bins_b) {
lnrate_b[j,1]~dnorm(-4, 0.1)
for (k in 2:n.years_b) {
lnrate_b[j,k] ~ dnorm(lnrate_b[j,k-1],tau_b)
}
}
tau_b~dgamma(0.01, 0.01)
#WHITE
for(i in 1:n.not.binned_w) {
deaths_w[i] ~ dpois(mu_w[i])
log(mu_w[i]) <- lnrate[age.bin_w[i], year_w[i]] + lnpop_w[i]
}
for(i in n.not.binned.plus.1_w:n.rows_w) {
binned.id_w[i] ~ dinterval(deaths_w[i], c(0, 9))
deaths_w[i] ~ dpois(mu_w[i])
log(mu_w[i]) <- lnrate[age.bin_w[i], year_w[i]] + lnpop_w[i]
}
for (j in 1:n.age.bins_w) {
lnrate_w[j,1]~dnorm(-4, 0.1)
for (k in 2:n.years_w) {
lnrate_w[j,k] ~ dnorm(lnrate_w[j,k-1],tau_w)
}
}
tau_w~dgamma(0.01, 0.01)
}
params = c('mu_w', 'mu_b', 'lnrate_w', 'lnrate_b')
nchains = 2
ideaths_b = c(rep(NA, ds_jags_bw$n.not.binned_b), rep(5, ds_jags_bw$n.binned_b))
ideaths_w = c(rep(NA, ds_jags_bw$n.not.binned_w), rep(5, ds_jags_bw$n.binned_w))
ilnrate_b=matrix(-4,ds_jags_bw$n.age.bins_b,ds_jags_bw$n.years_b)
ilnrate_w=matrix(-4,ds_jags_bw$n.age.bins_w,ds_jags_bw$n.years_w)
inits = list(deaths_b=ideaths_b, deaths_w = ideaths_w, tau_b=0.001, tau_w=0.001, lnrate_b=ilnrate_b,
lnrate_w = ilnrate_w)
myinits = list(inits, inits)
jags_model = jags(data=ds_jags_bw, param=params, n.chains=nchains, inits = myinits, n.iter=10000, n.burnin=2000, model.file=model)
model = function() {
#BLACK
for(i in 1:n.not.binned_b) {
deaths_b[i] ~ dpois(mu_b[i])
log(mu_b[i]) <- lnrate_b[age.bin_b[i], year_b[i]] + lnpop_b[i]
}
for(i in n.not.binned.plus.1_b:n.rows_b) {
binned.id_b[i] ~ dinterval(deaths_b[i], c(0, 9))
deaths_b[i] ~ dpois(mu_b[i])
log(mu_b[i]) <- lnrate_b[age.bin_b[i], year_b[i]] + lnpop_b[i]
}
for (j in 1:n.age.bins_b) {
lnrate_b[j,1]~dnorm(-4, 0.1)
for (k in 2:n.years_b) {
lnrate_b[j,k] ~ dnorm(lnrate_b[j,k-1],tau_b)
}
}
tau_b~dgamma(0.01, 0.01)
#WHITE
for(i in 1:n.not.binned_w) {
deaths_w[i] ~ dpois(mu_w[i])
log(mu_w[i]) <- lnrate_w[age.bin_w[i], year_w[i]] + lnpop_w[i]
}
for(i in n.not.binned.plus.1_w:n.rows_w) {
binned.id_w[i] ~ dinterval(deaths_w[i], c(0, 9))
deaths_w[i] ~ dpois(mu_w[i])
log(mu_w[i]) <- lnrate_w[age.bin_w[i], year_w[i]] + lnpop_w[i]
}
for (j in 1:n.age.bins_w) {
lnrate_w[j,1]~dnorm(-4, 0.1)
for (k in 2:n.years_w) {
lnrate_w[j,k] ~ dnorm(lnrate_w[j,k-1],tau_w)
}
}
tau_w~dgamma(0.01, 0.01)
}
params = c('mu_w', 'mu_b', 'lnrate_w', 'lnrate_b')
nchains = 2
ideaths_b = c(rep(NA, ds_jags_bw$n.not.binned_b), rep(5, ds_jags_bw$n.binned_b))
ideaths_w = c(rep(NA, ds_jags_bw$n.not.binned_w), rep(5, ds_jags_bw$n.binned_w))
ilnrate_b=matrix(-4,ds_jags_bw$n.age.bins_b,ds_jags_bw$n.years_b)
ilnrate_w=matrix(-4,ds_jags_bw$n.age.bins_w,ds_jags_bw$n.years_w)
inits = list(deaths_b=ideaths_b, deaths_w = ideaths_w, tau_b=0.001, tau_w=0.001, lnrate_b=ilnrate_b,
lnrate_w = ilnrate_w)
myinits = list(inits, inits)
jags_model = jags(data=ds_jags_bw, param=params, n.chains=nchains, inits = myinits, n.iter=10000, n.burnin=2000, model.file=model)
jags_model
params = c('mu_w', 'mu_b')
nchains = 2
ideaths_b = c(rep(NA, ds_jags_bw$n.not.binned_b), rep(5, ds_jags_bw$n.binned_b))
ideaths_w = c(rep(NA, ds_jags_bw$n.not.binned_w), rep(5, ds_jags_bw$n.binned_w))
ilnrate_b=matrix(-4,ds_jags_bw$n.age.bins_b,ds_jags_bw$n.years_b)
ilnrate_w=matrix(-4,ds_jags_bw$n.age.bins_w,ds_jags_bw$n.years_w)
inits = list(deaths_b=ideaths_b, deaths_w = ideaths_w, tau_b=0.001, tau_w=0.001, lnrate_b=ilnrate_b,
lnrate_w = ilnrate_w)
myinits = list(inits, inits)
# RUN MCMC
jags_model = jags(data=ds_jags_bw, param=params, n.chains=nchains, inits = myinits, n.iter=10000, n.burnin=2000, model.file=model)
jags_model
jags_bw = jags_model
jags_bw
selected_vars = c('Age', 'Sex2', 'Race2', 'COD2', 'Year', 'Count', 'Population')
ds = dat.clean.alabama[(dat.clean.alabama$Race2==race &
dat.clean.alabama$Sex2==sex &
dat.clean.alabama$COD2==cod), selected_vars]
dat.clean.alabama
head(dat.clean.alabama)
unique(dat.clean.alabama$COD2)
ds_injuries_black = subset_data(race='Black', sex='Male', cod='Injuries')
ds_injuries_white = subset_data(race='White', sex='Male', cod='Injuries')
ds_cardio_black = subset_data(race='Black', sex='Male', cod='Cardiovascular')
ds_cardio_white = subset_data(race='White', sex='Male', cod='Cardiovascular')
ds_cardio_black = subset_data(race='Black', sex='Male', cod='Cardiovascular')
ds_cardio_black
ds_cardio_white
ds_cancer_black = subset_data(race='Black', sex='Male', cod='Cancers')
ds_cancer_white = subset_data(race='White', sex='Male', cod='Cancers')
ds_cancer_black
ds_cancer_white
ds_com_black = subset_data(race='Black', sex='Male', cod='Communicable')
ds_com_white = subset_data(race='White', sex='Male', cod='Communicable')
ds_noncom_black = subset_data(race='Black', sex='Male', cod='Non-communicable')
ds_noncom_white = subset_data(race='White', sex='Male', cod='Non-communicable')
ds_other_black = subset_data(race='Black', sex='Male', cod='All other causes')
ds_other_white = subset_data(race='White', sex='Male', cod='All other causes')
COD_list = c('Injuries', 'Cardiovascular', 'Cancers', 'Communicable',
'Non-communicable', 'All other causes')
COD_list = c('Injuries', 'Cardiovascular', 'Cancers', 'Communicable',
'Non-communicable', 'All other causes')
N_COD = length(COD_list)
N_COD
i
N_COD = length(COD_list)
current_cod = COD_list[i]
current_cod
ds_black = list()
subset_data(race='Black', sex='Male', cod=current_cod)
ds_black[[i]] = subset_data(race='Black', sex='Male', cod=current_cod)
ds_black = ds_white = list()
for(i in 1:N_COD) {
current_cod = COD_list[i]
ds_black[[i]] = subset_data(race='Black', sex='Male', cod=current_cod)
ds_white[[i]] = subset_data(race='White', sex='Male', cod=current_cod)
}
ds_white
ds_black
names(ds_black)
names(ds_black) = COD_list
names(ds_black)
ds_black
current_cod = COD_list[i]
ds_black = subset_data(race='Black', sex='Male', cod=current_cod)
ds_white = subset_data(race='White', sex='Male', cod=current_cod)
ds_black = ds_white = ds_jags_bw = list()
ds_jags_bw[[i]] = combine_race_data(ds_black, ds_white)
combine_race_data(ds_black, ds_white)
current_cod = COD_list[i]
ds_black = subset_data(race='Black', sex='Male', cod=current_cod)
ds_white = subset_data(race='White', sex='Male', cod=current_cod)
ds_black
ds_white
combine_race_data(ds_black, ds_white)
ds_jags_bw[[i]] = combine_race_data(ds_black, ds_white)
ds_jags_bw
COD_list = c('Injuries', 'Cardiovascular', 'Cancers', 'Communicable',
'Non-communicable', 'All other causes')
ds_black = ds_white = ds_jags_bw = list()
N_COD = length(COD_list)
for(i in 1:N_COD) {
current_cod = COD_list[i]
ds_black = subset_data(race='Black', sex='Male', cod=current_cod)
ds_white = subset_data(race='White', sex='Male', cod=current_cod)
ds_jags_bw[[i]] = combine_race_data(ds_black, ds_white)
}
ds_jags_bw
i
i = 1
s_jags_bw[[i]]
ds_jags_bw[[i]]
names(ds_black) = COD_list
names(ds_jags_bw) = COD_list
ds_jags_bw
jags_bw = list()
jags_bw[[i]] = bwmort_smooth_time(ds_jags_bw[[i]])
ds_jags_bw[[i]]
# Preamble
setwd("~/Documents/BlackWhiteMortalityGap/Code")
source('4_smoothing_time_src.R')
source('4_smoothing_time_fun.R')
# Data for all COD
COD_list = c('Injuries', 'Cardiovascular', 'Cancers', 'Communicable',
'Non-communicable', 'All other causes')
ds_black = ds_white = ds_jags_bw = list()
N_COD = length(COD_list)
for(i in 1:N_COD) {
current_cod = COD_list[i]
ds_black = subset_data(race='Black', sex='Male', cod=current_cod)
ds_white = subset_data(race='White', sex='Male', cod=current_cod)
ds_jags_bw[[i]] = combine_race_data(ds_black, ds_white)
}
jags_bw = list()
jags_bw[[i]] = bwmort_smooth_time(ds_jags_bw[[i]])
jags_bw
dim(jags_bw)
jags_bw[[1]]
jags_bw[1]
jags_bw
jags_bw[[6]]
jags_bw
# Preamble
setwd("~/Documents/BlackWhiteMortalityGap/Code")
source('4_smoothing_time_src.R')
source('4_smoothing_time_fun.R')
# Data for all COD
COD_list = c('Injuries', 'Cardiovascular', 'Cancers', 'Communicable',
'Non-communicable', 'All other causes')
ds_black = ds_white = ds_jags_bw = list()
N_COD = length(COD_list)
for(i in 1:N_COD) {
current_cod = COD_list[i]
ds_black = subset_data(race='Black', sex='Male', cod=current_cod)
ds_white = subset_data(race='White', sex='Male', cod=current_cod)
ds_jags_bw[[i]] = combine_race_data(ds_black, ds_white)
}
# Run model for each COD
jags_bw = list()
for(i in 1:N_COD) {
jags_bw[[i]] = bwmort_smooth_time(ds_jags_bw[[i]])
}
warnings()
2000*100
2000*185
jags_bw[[1]]
deaths_b = jagsresults(x=jags_bw[[1]], params=c('mu_b'))
deaths_b
deaths_b = jagsresults(x=jags_bw[[1]], params=c('mu_b'))[, 50%']
deaths_b[, 50%']
deaths_b = jagsresults(x=jags_bw[[1]], params=c('mu_b'))[, '50%']
deaths_b
hist(deaths_b)
deaths_w = jagsresults(x=jags_bw[[1]], params=c('mu_w'))[, '50%']
deaths_w
head(ds_jags_bw)
ds_jags_bw[[1]]
ds_jags_bw[[1]]$deaths_b
ds_jags_bw[[1]]$year
ds_jags_bw[[1]]$year_b
ds_results = data.frame(year=ds_jags_bw[[1]]$year_b)
ds_results
ds_results$age.bin = ds_jags_bw[[1]]$age.bin_b
ds_results
ds_results$deaths = ds_jags_bw[[1]]$deaths_b
jagsresults(x=jags_bw[[1]], params=c('mu_b'))[, '50%']
ds_results$deaths_smoothed = deaths_smoothed
deaths_smoothed = jagsresults(x=jags_bw[[1]], params=c('mu_b'))[, '50%']
ds_results$deaths_smoothed = deaths_smoothed
ds_results
length(deaths_smoothed)
ds_y1 = ds_results[ds_results$year=='1', ]
ds_y1
ds_y1 =
ds_results[ds_results$year=='2', ]
ds_results[ds_results$year=='2', ]
ds_results[ds_results$year=='3', ]
ds_results[ds_results$year=='4', ]
ds_results[ds_results$year=='5', ]
r = ds_results[ds_results$year=='5', ]
plot(r$year, r$deaths, type='l')
lines(r$year, r$deaths_smoothed, col='blue')
plot(r$age.bin, r$deaths, type='l')
lines(r$age.bin, r$deaths_smoothed, col='blue')
deaths_b = jagsresults(x=jags_bw[[2]], params=c('mu_b'))[, '50%']
deaths_w = jagsresults(x=jags_bw[[2]], params=c('mu_w'))[, '50%']
ds_results = data.frame(year=ds_jags_bw[[1]]$year_b)
ds_results = data.frame(year=ds_jags_bw[[1]]$year_b)
ds_results$age.bin = ds_jags_bw[[1]]$age.bin_b
ds_results$deaths = ds_jags_bw[[1]]$deaths_b
deaths_smoothed = jagsresults(x=jags_bw[[1]], params=c('mu_b'))[, '50%']
ds_results$deaths_smoothed = deaths_smoothed
ds_results
deaths_smoothed = jagsresults(x=jags_bw[[2]], params=c('mu_b'))[, '50%']
ds_results$deaths_smoothed = deaths_smoothed
ds_results
jags_bw[[1]]
deaths_b = jagsresults(x=jags_bw[[1]], params=c('mu_b'))[, '50%']
deaths_w = jagsresults(x=jags_bw[[1]], params=c('mu_w'))[, '50%']
deaths_w
deaths_b
ds_jags_bw[[1]]$year_b
ds_results = data.frame(year=ds_jags_bw[[1]]$year_b)
ds_results
deaths_b = jagsresults(x=jags_bw[[1]], params=c('mu_b'))[, '50%']
deaths_w = jagsresults(x=jags_bw[[1]], params=c('mu_w'))[, '50%']
deaths_b
deaths_w
deaths_b
deaths_w
ds_results_b = data.frame(year=ds_jags_bw[[1]]$year_b)
smoothed_deaths_b = jagsresults(x=jags_bw[[1]], params=c('mu_b'))[, '50%']
smoothed_deaths_w = jagsresults(x=jags_bw[[1]], params=c('mu_w'))[, '50%']
ds_results_b$smoothed_deaths_b = smoothed_deaths_b
ds_results_b
smoothed_deaths_b = jagsresults(x=jags_bw[[1]], params=c('mu_b'))[, '50%']
smoothed_deaths_w = jagsresults(x=jags_bw[[1]], params=c('mu_w'))[, '50%']
ds_results_b = data.frame(year=ds_jags_bw[[1]]$year_b)
ds_results_b$deaths_b = ds_jags_bw[[1]]$deaths_b
ds_results_b$smoothed_deaths_b = smoothed_deaths_b
ds_results_b
ds_results_b = data.frame(year=ds_jags_bw[[1]]$year_b)
ds_results_b$deaths_b = ds_jags_bw[[1]]$deaths_b
ds_results_b$smoothed_deaths_b = smoothed_deaths_w
ds_results_b
plot(1:length(ds_results_b$year), ds_results_b$deaths_b)
plot(1:length(ds_results_b$year), ds_results_b$deaths_b, type='l')
plot(1:length(ds_results_b$year), ds_results_b$deaths_w)
plot(1:length(ds_results_b$year), ds_results_b$smoothed_deaths_b)
plot(1:length(ds_results_b$year), ds_results_b$deaths_b, type='l')
lines(1:length(ds_results_b$year), ds_results_b$smoothed_deaths_b)
plot(1:length(ds_results_b$year), ds_results_b$deaths_b, type='l')
lines(1:length(ds_results_b$year), ds_results_b$smoothed_deaths_b, col='blue')
ds_results_b = data.frame(year=ds_jags_bw[[1]]$year_b)
ds_results_b$deaths_b = ds_jags_bw[[1]]$deaths_b
ds_results_b$smoothed_deaths_b = smoothed_deaths_b
plot(1:length(ds_results_b$year), ds_results_b$deaths_b, type='l')
lines(1:length(ds_results_b$year), ds_results_b$smoothed_deaths_b, col='blue')
ds_results_b$age_bins = ds_jags_bw[[1]]$age.bin_b
ds_results_b
ds_results_b$age_bins = ds_jags_bw[[1]]$age.bin_w
ds_results_b
ds_results_b = data.frame(year=ds_jags_bw[[1]]$year_b)
ds_results_b$deaths_b = ds_jags_bw[[1]]$deaths_b
ds_results_b$smoothed_deaths_b = smoothed_deaths_b
ds_results_b$age_bins = ds_jags_bw[[1]]$age.bin_b
ds_results_b[ds_results_b$year=='1', ]
ds_results_b[ds_results_b$year=='2', ]
ds_results_b[ds_results_b$year=='10', ]
ds_results_b[ds_results_b$year=='11', ]
ds_results_b[ds_results_b$year=='16', ]
ds_results_b[ds_results_b$year=='17', ]
ds_results_b[ds_results_b$year=='20', ]
ds_results_b[order(ds_results_b$age_bins), ]
ds_results_b[order(ds_results_b$year), ]
ds_results_b[order(ds_results_b$age_bins, ds_results_b$year), ]
ds_results_b = ds_results_b[order(ds_results_b$age_bins, ds_results_b$year), ]
ds_results_b
smoothed_deaths_b = jagsresults(x=jags_bw[[1]], params=c('mu_b'))[, '50%']
ds_results_b = data.frame(year=ds_jags_bw[[1]]$year_b)
ds_results_b$deaths_b = ds_jags_bw[[1]]$deaths_b
ds_results_b$smoothed_deaths_b = smoothed_deaths_b
ds_results_b$age_bins = ds_jags_bw[[1]]$age.bin_b
ds_results_b = ds_results_b[order(ds_results_b$age_bins, ds_results_b$year), ]
ds_results_b
results_cod_b = list()
N.COD
N_COD
i
i = 1
results_cod_b = list()
smoothed_deaths_b = jagsresults(x=jags_bw[[i]], params=c('mu_b'))[, '50%']
smoothed_deaths_b
smoothed_deaths_b = jagsresults(x=jags_bw[[i]], params=c('mu_b'))[, '50%']
r = data.frame(year=ds_jags_bw[[i]]$year_b)
r$deaths_b = ds_jags_bw[[i]]$deaths_b
r$smoothed_deaths_b = smoothed_deaths_b
r$age_bins = ds_jags_bw[[i]]$age.bin_b
results_cod_b[[i]] = r[order(r$age_bins, r$year), ]
results_cod_b
results_cod_b = list()
for(i in 1:N_COD) {
smoothed_deaths_b = jagsresults(x=jags_bw[[i]], params=c('mu_b'))[, '50%']
r = data.frame(year=ds_jags_bw[[i]]$year_b)
r$deaths_b = ds_jags_bw[[i]]$deaths_b
r$smoothed_deaths_b = smoothed_deaths_b
r$age_bins = ds_jags_bw[[i]]$age.bin_b
results_cod_b[[i]] = r[order(r$age_bins, r$year), ]
}
results_cod_b
results_cod_b[[1]]
results_cod_b[[1]]
results_cod_b[[1:6]]$smoothed_deaths_b
sum(results_cod_b[[1:6]]$smoothed_deaths_b )
results_cod_b[[1]]
r = results_cod_b
?lapply
data.frame(sapply(results_cod_b, sum))
j = 1
i = 1
results_cod_b[[i]]$smoothed_deaths_b[j]
temp = c()
n = length(results_cod_b[[1]]$smoothed_deaths_b)
n
for(j in 1:n) {
temp[j] = results_cod_b[[i]]$smoothed_deaths_b[j]
}
temp
n = length(results_cod_b[[1]]$smoothed_deaths_b)
for(j in 1:n) {
for(i in 1:N_COD) {
temp[j] = results_cod_b[[i]]$smoothed_deaths_b[j]
}
}
temp
rbind(results_cod_b)
?do.call
do.call(rbind, results_cod_b)
temp =do.call(rbind, results_cod_b)
head(temp)
temp =do.call(cbind, results_cod_b)
head(temp)
head(temp)
names(temp)
temp$year
temp = c()
nrows = length(results_cod_b[[1]]$smoothed_deaths_b)
nrows
for(j in 1:nrows) {
for(i in 1:N_COD) {
temp[i] = results_cod_b[[i]]$smoothed_deaths_b[j]
}
temp2[j] = sum(temp)
}
temp = temp2 = c()
nrows = length(results_cod_b[[1]]$smoothed_deaths_b)
for(j in 1:nrows) {
for(i in 1:N_COD) {
temp[i] = results_cod_b[[i]]$smoothed_deaths_b[j]
}
temp2[j] = sum(temp)
}
temp2
temp = smoothed_allcod_deaths_b = c()
nrows = length(results_cod_b[[1]]$smoothed_deaths_b)
for(j in 1:nrows) {
for(i in 1:N_COD) {
temp[i] = results_cod_b[[i]]$smoothed_deaths_b[j]
}
smoothed_allcod_deaths_b[j] = sum(temp)
}
results = data.frame(results_cod_b[[1]]$year, results_cod_b[[1]]$age_bins, smoothed_allcod_deaths_b)
results
head(results)
results = data.frame(year=results_cod_b[[1]]$year, age_bin=results_cod_b[[1]]$age_bins, smoothed_allcod_deaths_b)
results
head(results)
ds_allcod = data.frame(year=results_cod_b[[1]]$year, age_bin=results_cod_b[[1]]$age_bins, smoothed_allcod_deaths_b)
life.table = function(data, num.ages.in.group, death.counts, population.counts, ave.prop.lived = NA){
data["R_x"] <- data[death.counts]/data[population.counts] #mortality rates
if(is.na(ave.prop.lived) == T) {
data["a_x"] <- 0.5 #average proportion of interval lived
data[1, "a_x"] <- 0.09
} else{
data["a_x"] <- data[ave.prop.lived]
}
data["q_x"] <- data[num.ages.in.group]*data["R_x"]/(1 + (1 - data["a_x"])*data[num.ages.in.group]*data["R_x"])
#probability of dying
data[dim(data)[1], "q_x"] <- 1 #100% die in last age group
data["p_x"] <- 1 - data["q_x"] #probability of survival
data["l_x"] <- NA #l_x: is the number of individuals alive at the start of the interval
data[1, "l_x"] <- 100000
for(i in 2:dim(data)[1]) {
data[i, "l_x"] <- data[i - 1, "l_x"]*data[i-1, "p_x"]
}
data["d_x"] <- data["l_x"]*data["q_x"] #number of deaths
data["L_x"] <- (data["l_x"] - data["d_x"])*data[num.ages.in.group] + data["d_x"]*data["a_x"]*data[num.ages.in.group] #person time in the age bracket
data[dim(data)[1], "L_x"] <- data[dim(data)[1], "l_x"]/data[dim(data)[1], "R_x"] #different for last age bracket
#now to calculate the total person time lived at or after age x, T_x:
data["cumsum"] <- cumsum(data["L_x"])
data["l.cumsum"] <- c(0, unlist(data[1:(dim(data)[1] - 1), "cumsum"]))
data["T_x"] <- sum(data["L_x"]) - data["l.cumsum"]
data["e_x"] <- data["T_x"]/data["l_x"]
return(data)
}
ds_allcod_b = data.frame(year=results_cod_b[[1]]$year,
age_bin=results_cod_b[[1]]$age_bins,
smoothed_allcod_deaths_b)
300/7
350/7
ds_allcod_b_1969 = ds_allcod_b[ds_allcod_b$year=='1', ]
ds_allcod_b_1969
results_cod_b[[1]]
exp(ds_jags_bw[[i]]$lnpop_b)
results_cod_b = list()
for(i in 1:N_COD) {
smoothed_deaths_b = jagsresults(x=jags_bw[[i]], params=c('mu_b'))[, '50%']
r = data.frame(year=ds_jags_bw[[i]]$year_b)
r$deaths_b = ds_jags_bw[[i]]$deaths_b
r$smoothed_deaths_b = smoothed_deaths_b
r$age_bins = ds_jags_bw[[i]]$age.bin_b
r$pop = exp(ds_jags_bw[[i]]$lnpop_b)
results_cod_b[[i]] = r[order(r$age_bins, r$year), ]
}
temp = smoothed_allcod_deaths_b = c()
nrows = length(results_cod_b[[1]]$smoothed_deaths_b)
for(j in 1:nrows) {
for(i in 1:N_COD) {
temp[i] = results_cod_b[[i]]$smoothed_deaths_b[j]
}
smoothed_allcod_deaths_b[j] = sum(temp)
}
ds_allcod_b = data.frame(year=results_cod_b[[1]]$year,
age_bin=results_cod_b[[1]]$age_bins,
pop = results_cod_b[[1]]$pop,
smoothed_allcod_deaths_b)
ds_allcod_b_1969 = ds_allcod_b[ds_allcod_b$year=='1', ]
ds_allcod_b_1969
life.table(data=ds_allcod_b_1969, num.ages.in.group='age_bin', death.counts='smoothed_allcod_deaths_b', population.counts)
life.table(data=ds_allcod_b_1969, num.ages.in.group='age_bin', death.counts='smoothed_allcod_deaths_b', population.counts='pop')
life.table(data=ds_allcod_b_1969, num.ages.in.group='age_bin', death.counts='smoothed_allcod_deaths_b', population.counts='pop')
