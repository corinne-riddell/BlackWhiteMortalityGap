y = rpois(N, lambda=20)
pop = y + round(runif(N,5000,10000),0)
hist(y/pop)
y/pop
model = function() {
for(i in 1:N) {
y[i] ~ dpois(mu)
}
}
params = c('mu')
nchains = 2
ds_jags = list(N=N,y=y)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains, inits=inits,
n.iter=1000, n.burnin=200, model.file=model)
source('/Users/kathryn/Dropbox/BlackWhiteGap/Code/4_smoothing_models_src.R')
jags_model = jags(data=ds_jags, param=params, n.chains=nchains, inits=inits,
n.iter=1000, n.burnin=200, model.file=model)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
model = function() {
for(i in 1:N) {
y[i] ~ dpois(mu[i])
}
}
params = c
model = function() {
for(i in 1:N) {
y[i] ~ dpois(mu[i])
}
}
params = c('mu')
nchains = 2
inits = function() list('tau' = runif(1))
ds_jags = list(N=N,y=y)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
model = function() {
for(i in 1:N) {
y[i] ~ dpois(mu[i])
rate[i] <- exp(mu[i])
}
}
params = c('mu')
nchains = 2
inits = function() list('tau' = runif(1))
ds_jags = list(N=N,y=y)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
model = function() {
for(i in 1:N) {
y[i] ~ dpois(mu[i])
mu[i] ~ dgamma(0.1, 0.1)
}
}
ds_jags = list(N=N,y=y)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
jags_model
jagsresults(x=jags_model, params=c('mu'))
mu = jagsresults(x=jags_model, params=c('mu'))
mu[ ,1]
mean(mu[ ,1])
hist(mu[ ,1])
y
model = function() {
for(i in 1:N) {
y[i] ~ dpois(mu[i])
log(mu[i]) ~ dgamma(0.1, 0.1)
}
}
params = c('mu')
nchains = 2
inits = function() list('tau' = runif(1))
ds_jags = list(N=N,y=y)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
model = function() {
for(i in 1:N) {
y[i] ~ dpois(mu[i])
log(mu[i]) ~ dgamma(0.1, 0.1)
}
}
params = c('mu')
nchains = 2
ds_jags = list(N=N,y=y)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
N = 50
y = rpois(N, lambda=20)
pop = y + round(runif(N,5000,10000),0)
hist(y/pop)
model = function() {
for(i in 1:N) {
y[i] ~ dpois(mu[i])
}
}
params = c('mu')
nchains = 2
inits = function() list('tau' = runif(1))
ds_jags = list(N=N,y=y)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
model = function() {
for(i in 1:N) {
y[i] ~ dpois(mu[i])
mu[i] ~ dgamma(0.01, 0.01)
}
}
params = c('mu')
nchains = 2
inits = function() list('tau' = runif(1))
ds_jags = list(N=N,y=y)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
model = function() {
for(i in 1:N) {
y[i] ~ dpois(mu[i])
log(mu[i]) ~ dgamma(0.01, 0.01)
}
}
params = c('mu')
nchains = 2
inits = function() list('tau' = runif(1))
ds_jags = list(N=N,y=y)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
N = 50
deaths = rpois(N, lambda=20)
N = 50
deaths = rpois(N, lambda=20)
pop = deaths + round(runif(N,5000,10000),0)
N = 50
deaths = rpois(N, lambda=20)
pop = round(runif(N,5000,10000),0)
model = function() {
for(i in 1:N) {
deaths[i] ~ dpois(mu[i])
mu[i] ~ dgamma(0.01, 0.01)
}
}
params = c('mu')
nchains = 2
inits = function() list('tau' = runif(1))
ds_jags = list(N=N, deaths=deaths)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
N = 50
deaths = rpois(N, lambda=20)
pop = round(runif(N,5000,10000),0)
model = function() {
for(i in 1:N) {
deaths[i] ~ dpois(mu[i])
mu[i] <- mortrate[i]*pop[i]
mortrate[i] ~ dgamma(0.1, 0.1)
}
}
params = c('mu')
nchains = 2
inits = function() list('tau' = runif(1))
ds_jags = list(N=N, deaths=deaths, pop=pop)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
mu = jagsresults(x=jags_model, params=c('mu'))
hist(mu[ ,1])
mean_mortrate = mean(deaths/pop)
mean_mortrate
params = c('mu', 'mortrate')
nchains = 2
ds_jags = list(N=N, deaths=deaths, pop=pop)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
mu = jagsresults(x=jags_model, params=c('mu'))
hist(mu[ ,1])
mu = jagsresults(x=jags_model, params=c('mu'))
mortrate = jagsresults(x=jags_model, params=c('mortrate'))
mortrate
hist(mu[ ,1])
hist(mortrate[ ,1])
hist(mortrate[ ,1]) ; summary(mortrate[ ,1])
mean_mortrate
pop = round(runif(N,5000,10000),0)
deaths = mean_mortrate * pop
deaths
deaths = round(mean_mortrate * pop)
deaths
model = function() {
for(i in 1:N) {
deaths[i] ~ dpois(mu[i])
mu[i] <- mortrate[i]*pop[i]
mortrate[i] ~ dgamma(0.1, 0.1)
}
}
params = c('mu', 'mortrate')
nchains = 2
inits = function() list('tau' = runif(1))
ds_jags = list(N=N, deaths=deaths, pop=pop)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
mu = jagsresults(x=jags_model, params=c('mu'))
mortrate = jagsresults(x=jags_model, params=c('mortrate'))
hist(mu[ ,1]) ; summary(mu[ ,1])
hist(mortrate[ ,1]) ; summary(mortrate[ ,1])
mortrate
mean(mu[, '50%']
)
mean(mortrate[, '50%'])
mean(mortrate[, '2.5%'])
mean(mortrate[, '97.5%'])
N = 500
mean_mortrate = 0.002
pop = round(runif(N,5000,10000),0)
deaths = round(mean_mortrate * pop)
model = function() {
for(i in 1:N) {
deaths[i] ~ dpois(mu[i])
mu[i] <- mortrate[i]*pop[i]
mortrate[i] ~ dgamma(0.1, 0.1)
}
}
params = c('mu', 'mortrate')
nchains = 2
inits = function() list('tau' = runif(1))
ds_jags = list(N=N, deaths=deaths, pop=pop)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
mu = jagsresults(x=jags_model, params=c('mu'))
mortrate = jagsresults(x=jags_model, params=c('mortrate'))
hist(mu[ ,1])
mean(mu[, '50%'])
mu = jagsresults(x=jags_model, params=c('mu'))
mortrate = jagsresults(x=jags_model, params=c('mortrate'))
mean(mortrate[, '50%'])
mean(mortrate[, '2.5%'])
mean(mortrate[, '97.5%'])
N = 500
mean_mortrate = 0.002
pop = round(runif(N,50000,100000),0)
deaths = round(mean_mortrate * pop)
model = function() {
for(i in 1:N) {
deaths[i] ~ dpois(mu[i])
mu[i] <- mortrate[i]*pop[i]
mortrate[i] ~ dgamma(0.1, 0.1)
}
}
params = c('mu', 'mortrate')
nchains = 2
inits = function() list('tau' = runif(1))
ds_jags = list(N=N, deaths=deaths, pop=pop)
jags_model = jags(data=ds_jags, param=params, n.chains=nchains,
n.iter=1000, n.burnin=200, model.file=model)
mu = jagsresults(x=jags_model, params=c('mu'))
mortrate = jagsresults(x=jags_model, params=c('mortrate'))
hist(mu[ ,1])
mean(mu[, '50%'])
hist(mortrate[ ,1]) ; summary(mortrate[ ,1])
mean(mortrate[, '50%'])
mean(mortrate[, '2.5%'])
mean(mortrate[, '97.5%'])
source('/Users/kathryn/Dropbox/BlackWhiteGap/Code/4_smoothing_models_src.R')
jags_model = jags_smooth_year(data, pop_div=1)
ds = data
ds
data = subset_data(race='Black', sex='Female', cod='Injuries')
data
head(data)
ds = data
ds
jags_model = jags_smooth_year(data, pop_div=1)
jags_model
source('/Users/kathryn/Dropbox/BlackWhiteGap/Code/4_smoothing_models_src.R')
data = subset_data(race='Black', sex='Female', cod='Injuries')
head(data)
jags_model = jags_smooth_year(data, pop_div=1)
jags_model
source('/Users/kathryn/Dropbox/BlackWhiteGap/Code/4_smoothing_models_src.R')
# Subset dataset
subset_data = function(race='Black', sex='Female', cod='Injuries') {
selected_vars = c('Age', 'Sex2', 'Race2', 'COD2', 'Year', 'Count', 'Population')
ds = dat.clean.alabama[(dat.clean.alabama$Race2==race &
dat.clean.alabama$Sex2==sex &
dat.clean.alabama$COD2==cod), selected_vars]
return(ds)
}
# Subset dataset
subset_data = function(race='Black', sex='Female', cod='Injuries') {
selected_vars = c('Age', 'Sex2', 'Race2', 'COD2', 'Year', 'Count', 'Population')
ds = dat.clean.alabama[(dat.clean.alabama$Race2==race &
dat.clean.alabama$Sex2==sex &
dat.clean.alabama$COD2==cod), selected_vars]
return(ds)
}
# Run smoothing model v1: smoothing by year
jags_smooth_year = function(ds, pop_div=100) {
df = data.frame(deaths=ds$Count, pop = ds$Population/pop_div, age=(ds$Age+1), year=(ds$Year+1))
# Need wide format for jags
nagecats = length(unique(ds$Age))
nyears = length(unique(ds$Year))
jags_deaths = as.data.frame(matrix(NA, nrow=nyears, ncol=nagecats))
jags_pop = as.data.frame(matrix(NA, nrow=nyears, ncol=nagecats))
for(year in 1:nyears) {
for(agecat in 1:nagecats) {
jags_deaths[year, agecat] = df$deaths[df$age==agecat& df$year==year]
jags_pop[year, agecat] = df$pop[df$age==agecat& df$year==year]
}
}
colnames(jags_deaths) = colnames(jags_pop) = unique(df$age)
ds_jags = list(deaths = jags_deaths,
pop = jags_pop)
ds_jags$nagecats = length(unique(ds$Age))
ds_jags$nyears = length(unique(ds$Year))
model = function() {
for(year in 1:nyears) {
for(agecat in 1:nagecats) {
deaths[year, agecat] ~ dpois( mu[year, agecat] )
mu[year, agecat] <- b[year, agecat]*pop[year,agecat]
#log(mu[year, agecat]) <- (pop[year, agecat] * b[year, agecat])
}
}
for(year in 2:nyears) {
for(agecat in 1:nagecats) {
b[year, agecat] ~ dnorm(b[year-1, agecat], tau)
}
}
for(agecat in 2:nagecats) {
b[1, agecat] ~ dbeta(0.1, 2)
}
b[1, 1] ~ dbeta(0.1, 10)
tau ~ dgamma(0.01, 0.01)
}
params = c('mu', 'b', 'tau')
nchains = 2
inits = function() list('tau' = runif(1))
jags_model = jags(data=ds_jags, param=params, n.chains=nchains, inits=inits,
n.iter=1000, n.burnin=200, model.file=model)
return(jags_model)
}
source('/Users/kathryn/Dropbox/BlackWhiteGap/Code/4_smoothing_models_src.R')
data = subset_data(race='Black', sex='Female', cod='Injuries')
head(data)
jags_model = jags_smooth_year(data, pop_div=1)
jags_model
source('/Users/kathryn/Dropbox/BlackWhiteGap/Code/4_smoothing_models_src.R')
data = subset_data(race='Black', sex='Female', cod='Injuries')
head(data)
jags_model = jags_smooth_year(data, pop_div=1)
jags_model
ds = subset_data(race='Black', sex='Female', cod='Injuries')
jags_model = jags_smooth_year(ds, pop_div=1)
jags_model
df = data.frame(deaths=ds$Count, pop = ds$Population/pop_div, age=(ds$Age+1), year=(ds$Year+1))
df = data.frame(deaths=ds$Count, pop = ds$Population, age=(ds$Age+1), year=(ds$Year+1))
df
nagecats = length(unique(ds$Age))
nyears = length(unique(ds$Year))
jags_deaths = as.data.frame(matrix(NA, nrow=nyears, ncol=nagecats))
jags_pop = as.data.frame(matrix(NA, nrow=nyears, ncol=nagecats))
for(year in 1:nyears) {
for(agecat in 1:nagecats) {
jags_deaths[year, agecat] = df$deaths[df$age==agecat& df$year==year]
jags_pop[year, agecat] = df$pop[df$age==agecat& df$year==year]
}
}
colnames(jags_deaths) = colnames(jags_pop) = unique(df$age)
ds_jags = list(deaths = jags_deaths,
pop = jags_pop)
ds_jags$nagecats = length(unique(ds$Age))
ds_jags$nyears = length(unique(ds$Year))
model = function() {
for(year in 1:nyears) {
for(agecat in 1:nagecats) {
deaths[year, agecat] ~ dpois( mu[year, agecat] )
mu[year, agecat] <- b[year, agecat]*pop[year,agecat]
#log(mu[year, agecat]) <- (pop[year, agecat] * b[year, agecat])
}
}
for(year in 2:nyears) {
for(agecat in 1:nagecats) {
b[year, agecat] ~ dnorm(b[year-1, agecat], tau)
}
}
for(agecat in 2:nagecats) {
b[1, agecat] ~ dbeta(0.1, 2)
}
b[1, 1] ~ dbeta(0.1, 10)
tau ~ dgamma(0.01, 0.01)
}
params = c('mu', 'b', 'tau')
nchains = 2
inits = function() list('tau' = runif(1))
jags_model = jags(data=ds_jags, param=params, n.chains=nchains, inits=inits,
n.iter=1000, n.burnin=200, model.file=model)
smoothed_deaths = jagsresults(x=jags_model, params=c('mu'))
mort_rate = jagsresults(x=jags_model, params=c('b'))
head(mort_rate)
r = data.frame(deaths=data$Count, smoothed_deaths=round(smoothed_deaths[,'50%'],0))
imputed = r$smoothed_deaths[is.na(r$deaths)==TRUE]
table(imputed)
hist(imputed)
df = data.frame(deaths=ds$Count, pop = ds$Population, age=(ds$Age+1), year=(ds$Year+1))
# Need wide format for jags
nagecats = length(unique(ds$Age))
nyears = length(unique(ds$Year))
jags_deaths = as.data.frame(matrix(NA, nrow=nyears, ncol=nagecats))
jags_pop = as.data.frame(matrix(NA, nrow=nyears, ncol=nagecats))
for(year in 1:nyears) {
for(agecat in 1:nagecats) {
jags_deaths[year, agecat] = df$deaths[df$age==agecat& df$year==year]
jags_pop[year, agecat] = df$pop[df$age==agecat& df$year==year]
}
}
colnames(jags_deaths) = colnames(jags_pop) = unique(df$age)
ds_jags = list(deaths = jags_deaths,
pop = jags_pop)
ds_jags$nagecats = length(unique(ds$Age))
ds_jags$nyears = length(unique(ds$Year))
model = function() {
for(year in 1:nyears) {
for(agecat in 1:nagecats) {
deaths[year, agecat] ~ dpois( mu[year, agecat] )
mu[year, agecat] <- b[year, agecat]*pop[year,agecat]
b[year, agecat] ~ dgamma(0.1, 2)
#log(mu[year, agecat]) <- (pop[year, agecat] * b[year, agecat])
}
}
#
# for(year in 2:nyears) {
#   for(agecat in 1:nagecats) {
#     b[year, agecat] ~ dnorm(b[year-1, agecat], tau)
#   }
# }
#
#   for(agecat in 2:nagecats) {
#     b[1, agecat] ~ dbeta(0.1, 2)
#   }
#
# b[1, 1] ~ dbeta(0.1, 10)
# tau ~ dgamma(0.01, 0.01)
}
params = c('mu', 'b', 'tau')
nchains = 2
inits = function() list('tau' = runif(1))
jags_model = jags(data=ds_jags, param=params, n.chains=nchains, inits=inits,
n.iter=1000, n.burnin=200, model.file=model)
smoothed_deaths = jagsresults(x=jags_model, params=c('mu'))
mort_rate = jagsresults(x=jags_model, params=c('b'))
head(mort_rate)
r = data.frame(deaths=data$Count, smoothed_deaths=round(smoothed_deaths[,'50%'],0))
imputed = r$smoothed_deaths[is.na(r$deaths)==TRUE]
table(imputed)
hist(imputed)
table(imputed>9)
table(imputed<10)
320.30/2
ds = read.csv('/Users/kathryn/Dropbox/work/phd/gavin - shared/WHO Map/UK_estimates_orig.csv')
head(ds)
ds1 = read.csv('/Users/kathryn/Dropbox/work/phd/gavin - shared/WHO Map/UK_estimates_orig.csv')
ds2 = read.csv('/Users/kathryn/Dropbox/work/phd/gavin - shared/WHO Map/UK_estimates_imputed.csv')
head(ds2)
head(ds1)
colnames(ds2) = colnames(ds1)
head(ds2)
ds2
head(ds2)
write.csv(ds2, '/Users/kathryn/Dropbox/work/phd/gavin - shared/WHO Map/UK_estimates_imputed2.csv', row.names=FALSE)
63.10 - 15
63.10 - 15.77
132.32-38.77
1846.77
1846.77 - 699
248/40
6.2*140
setwd("~/Documents/BlackWhiteMortalityGap/Code")
source('4_smoothing_models_src.R')
dat.clean.alabama$crude_new = dat.clean.alabama$Count/dat.clean.alabama$Population
ds = dat.clean.alabama[dat.clean.alabama$Age==12, ]
ggplot(subset(dat.clean.alabama, Race2=="White" & Sex2=="Male" & COD2=='All other causes' & Age==8), aes(x = Population, y=Count)) + geom_point(aes(col=crude_new))
+ geom_smooth(col="black") + scale_y_continuous("Mortality Rate") + ggtitle("White Men in Alabama (all years)")
ggplot(subset(dat.clean.alabama, Race2=="White" & Sex2=="Male" & COD2=='All other causes' & Age==8), aes(x = Population, y=Count)) + geom_point(aes(col=crude_new))
ggplot(subset(dat.clean.alabama, Race2=="White" & Sex2=="Male" & COD2=='All other causes' & Age==8), aes(x = Population, y=Count)) + geom_point(aes(col=crude_new))   + geom_smooth(col="black") + scale_y_continuous("Mortality Rate") + ggtitle("White Men in Alabama (all years)")
ds = subset(dat.clean.alabama, Race2=="White" & Sex2=="Male" & COD2=='All other causes' & Age==1)
plot(ds$Year, ds$crude_new, type='l', ylim=c(0, 0.0005))
lines(ds$Year, ds$Count_md1/ds$Population, col='red')
lines(ds$Year, ds$Count_md9/ds$Population, col='blue')
N = length(ds[,1])
ds$smoothed_rate = rep(NA, N)
for(i in 2:N) {
if( is.na(ds$crude_new[i])==T) {
ds$smoothed_rate[i] = ds$crude_new[i-1]
if( is.na(ds$smoothed_rate[i]) == T) {
ds$smoothed_rate[i] = ds$smoothed_rate[i-1]
}
}
}
lines(ds$Year, ds$smoothed_rate, col='purple')
g = ggplot(subset(dat.clean.alabama, Race2=="Black" & Sex2=="Male" & COD2=='Injuries'), aes(x = Year, y=Population)) + geom_point(aes(col=crude_new)) + facet_wrap( ~ Age2, scales='free')
g
2500 - (1802.66-700)
7*8
95.49 + 50
29.51+321.34
350.85+165+150
1400-665.85
8.10+7.35
130.51 - 15.45
115.06/2
665.85 +
57.53
150+165+350.85+57.53
134.80+147.35
3298.55-2500
3298.55-2500-699
